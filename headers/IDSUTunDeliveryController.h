/*
* This header is generated by classdump-dyld 1.0
* on Thursday, March 2, 2023 at 12:48:08 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/Contents/MacOS/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <libobjc.A.dylib/IDSNRDeviceBridgeDelegate.h>
#import <libobjc.A.dylib/IDSUTunPeerDelegate.h>
#import <libobjc.A.dylib/IMSystemMonitorListener.h>
#import <libobjc.A.dylib/IDSPairingManagerDelegate.h>
#import <libobjc.A.dylib/IDSRapportClientDelegate.h>

@protocol IDSUTunDeliveryControllerDelegate, OS_dispatch_queue;
@class NSMutableDictionary, NSHashTable, NSSet, IMTimer, NSObject, IDSNRDeviceBridge, IDSNRDevicePreferencesHandler, IDSConnectivityMonitor, NSDictionary, NSString;

@interface IDSUTunDeliveryController : NSObject <IDSNRDeviceBridgeDelegate, IDSUTunPeerDelegate, IMSystemMonitorListener, IDSPairingManagerDelegate, IDSRapportClientDelegate> {

	opaque_pthread_mutex_t _deviceIDToPeerLock;
	NSMutableDictionary* _deviceIDToPeer;
	NSMutableDictionary* _btuuidToSessionID;
	opaque_pthread_mutex_t _streamIDToTopicLock;
	NSMutableDictionary* _streamIDToTopic;
	unsigned _messageID;
	double _lastConnectedTime;
	double _lastIsNearbyBecameTrue;
	id<IDSUTunDeliveryControllerDelegate> _delegate;
	char _isLinkForDefaultPeerConnected;
	NSHashTable* _connectivityDelegates;
	opaque_pthread_mutex_t _trafficClassLock;
	NSSet* _allowedTrafficClasses;
	char _enableOTR;
	IMTimer* _otrTimer;
	char _otrInitialized;
	char _localAccountSetupCompleted;
	char _defaultPeerConnectedDeferred;
	opaque_pthread_mutex_t _continuityPeerLock;
	NSMutableDictionary* _lockedPeerMap;
	NSMutableDictionary* _peerListMap;
	NSMutableDictionary* _pendingPeerMap;
	NSMutableDictionary* _peerConnectBlocksMap;
	NSMutableDictionary* _peerFailureBlocksMap;
	double _lastCloudConnectedTime;
	NSObject*<OS_dispatch_queue> _broadcastQueue;
	char _isConnected;
	char _isCloudConnected;
	char _isClassCConnected;
	char _shouldUseIPsecLinkForDefaultPairedDevice;
	char _isLocalSetUpInProgress;
	IDSNRDeviceBridge* _idsNRDeviceBridge;
	IDSNRDevicePreferencesHandler* _nrDevicePreferencesHandler;
	IDSConnectivityMonitor* _connectivityMonitor;
	double _notificationDelayInSeconds;

}

@property (assign,nonatomic) char shouldUseIPsecLinkForDefaultPairedDevice;                           //@synthesize shouldUseIPsecLinkForDefaultPairedDevice=_shouldUseIPsecLinkForDefaultPairedDevice - In the implementation block
@property (nonatomic,retain) IDSNRDeviceBridge * idsNRDeviceBridge;                                   //@synthesize idsNRDeviceBridge=_idsNRDeviceBridge - In the implementation block
@property (nonatomic,retain) IDSNRDevicePreferencesHandler * nrDevicePreferencesHandler;              //@synthesize nrDevicePreferencesHandler=_nrDevicePreferencesHandler - In the implementation block
@property (assign,nonatomic) char isConnected;                                                        //@synthesize isConnected=_isConnected - In the implementation block
@property (assign,nonatomic) char isCloudConnected;                                                   //@synthesize isCloudConnected=_isCloudConnected - In the implementation block
@property (assign,nonatomic) char isClassCConnected;                                                  //@synthesize isClassCConnected=_isClassCConnected - In the implementation block
@property (nonatomic,retain) IDSConnectivityMonitor * connectivityMonitor;                            //@synthesize connectivityMonitor=_connectivityMonitor - In the implementation block
@property (assign,nonatomic) double notificationDelayInSeconds;                                       //@synthesize notificationDelayInSeconds=_notificationDelayInSeconds - In the implementation block
@property (assign,nonatomic) char isLocalSetUpInProgress;                                             //@synthesize isLocalSetUpInProgress=_isLocalSetUpInProgress - In the implementation block
@property (assign,nonatomic,__weak) id<IDSUTunDeliveryControllerDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) char isPresent; 
@property (readonly) NSDictionary * syncPriorityMessageStatistics; 
@property (readonly) NSDictionary * defaultPriorityMessageStatistics; 
@property (readonly) NSDictionary * urgentPriorityMessageStatistics; 
@property (readonly) NSDictionary * urgentCloudPriorityMessageStatistics; 
@property (readonly) NSDictionary * sendingMessageStatistics; 
@property (readonly) NSDictionary * queuedIncomingMessageDictionary; 
@property (nonatomic,retain) NSSet * allowedTrafficClasses;                                           //@synthesize allowedTrafficClasses=_allowedTrafficClasses - In the implementation block
@property (nonatomic,readonly) char enableOTR;                                                        //@synthesize enableOTR=_enableOTR - In the implementation block
@property (nonatomic,readonly) char defaultPeerIsConnected; 
@property (nonatomic,readonly) char defaultPeerIsNearby; 
@property (nonatomic,readonly) char defaultPeerIsCloudConnected; 
@property (nonatomic,readonly) char isTerminusConnected; 
@property (nonatomic,readonly) char isTerminusConnectedOverBluetooth; 
@property (nonatomic,readonly) char isTerminusNearby; 
@property (nonatomic,readonly) char isTerminusRegistered; 
@property (assign,nonatomic) double lastCloudConnectedTime;                                           //@synthesize lastCloudConnectedTime=_lastCloudConnectedTime - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(id<IDSUTunDeliveryControllerDelegate>)delegate;
-(void)setDelegate:(id<IDSUTunDeliveryControllerDelegate>)arg1 ;
-(char)isConnected;
-(void)systemScreenDidPowerDown;
-(void)setTopics:(id)arg1 ;
-(void)localSetupCompleted;
-(void)setAllowedTrafficClasses:(NSSet *)arg1 ;
-(char)isCloudConnected;
-(NSSet *)allowedTrafficClasses;
-(void)setIsConnected:(char)arg1 ;
-(char)isPresent;
-(id)pairingManager;
-(id)hashForString:(id)arg1 ;
-(id)_pairedDeviceUUID;
-(char)shouldUseIPsecLinkForDefaultPairedDevice;
-(void)removeUTunPeerWithSessionID:(id)arg1 reason:(long long)arg2 shouldWait:(char)arg3 ;
-(void)unlockContinuityPeer:(id)arg1 ;
-(void)defaultPeerSetLinkPreferences:(id)arg1 ;
-(void)admissionPolicyChangedForTopic:(id)arg1 allowed:(char)arg2 ;
-(void)defaultPeerSetPreferInfraWiFi:(char)arg1 services:(id)arg2 ;
-(NSDictionary *)syncPriorityMessageStatistics;
-(NSDictionary *)defaultPriorityMessageStatistics;
-(NSDictionary *)urgentPriorityMessageStatistics;
-(NSDictionary *)urgentCloudPriorityMessageStatistics;
-(NSDictionary *)sendingMessageStatistics;
-(NSDictionary *)queuedIncomingMessageDictionary;
-(void)didAddPairedDevice:(id)arg1 ;
-(void)didRemovePairedDevice:(id)arg1 ;
-(void)didUpdatePairedDevice:(id)arg1 ;
-(char)defaultPeerIsConnected;
-(char)defaultPeerIsNearby;
-(char)defaultPeerIsCloudConnected;
-(void)addConnectivityDelegate:(id)arg1 ;
-(void)removeConnectivityDelegate:(id)arg1 ;
-(char)isClassCConnected;
-(void)cancelMessageID:(id)arg1 ;
-(void)kickProgressBlockForMessageID:(id)arg1 ;
-(void)peerConnectivityChanged:(id)arg1 ;
-(void)peer:(id)arg1 protobufReceived:(id)arg2 topic:(id)arg3 command:(id)arg4 fromID:(id)arg5 messageID:(id)arg6 wantsAppAck:(char)arg7 expectsPeerResponse:(char)arg8 peerResponseIdentifier:(id)arg9 messageUUID:(id)arg10 priority:(long long)arg11 isCompressed:(char)arg12 connectionType:(long long)arg13 didWakeHint:(char)arg14 ;
-(void)peer:(id)arg1 dataReceived:(id)arg2 topic:(id)arg3 command:(id)arg4 fromID:(id)arg5 messageID:(id)arg6 wantsAppAck:(char)arg7 expectsPeerResponse:(char)arg8 peerResponseIdentifier:(id)arg9 messageUUID:(id)arg10 priority:(long long)arg11 isCompressed:(char)arg12 connectionType:(long long)arg13 didWakeHint:(char)arg14 ;
-(void)peer:(id)arg1 messageReceived:(id)arg2 topic:(id)arg3 command:(id)arg4 fromID:(id)arg5 messageID:(id)arg6 wantsAppAck:(char)arg7 expectsPeerResponse:(char)arg8 peerResponseIdentifier:(id)arg9 messageUUID:(id)arg10 priority:(long long)arg11 isCompressed:(char)arg12 connectionType:(long long)arg13 didWakeHint:(char)arg14 ;
-(void)peer:(id)arg1 receivedAppLevelAckWithTopic:(id)arg2 fromID:(id)arg3 messageID:(id)arg4 peerResponseIdentifier:(id)arg5 priority:(long long)arg6 connectionType:(long long)arg7 ;
-(void)peerHasSpaceForUrgentMessages:(id)arg1 dataProtectionClass:(unsigned)arg2 withTypes:(id)arg3 ;
-(void)peerHasSpaceForNonUrgentMessages:(id)arg1 priority:(long long)arg2 dataProtectionClass:(unsigned)arg3 withTypes:(id)arg4 ;
-(id)lockedContinuityPeerID:(id)arg1 ;
-(void)addContinuityPeer:(id)arg1 btUUID:(id)arg2 connectBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
-(void)peerNearbyStateChanged:(id)arg1 forceNotify:(char)arg2 ;
-(void)defaultPeerSetWantsQuickRelayRequest:(char)arg1 ;
-(char)localSetupInProgress;
-(void)setIsCloudConnected:(char)arg1 ;
-(void)setIsClassCConnected:(char)arg1 ;
-(void)localAccountSetupCompleted;
-(void)deviceWithUniqueID:(id)arg1 updatedUUID:(id)arg2 ;
-(void)setDeviceUniqueIDToCBUUID:(id)arg1 ;
-(id)sessionIDforPeer:(id)arg1 ;
-(void)startIdsNRDeviceBridgeAndPreferenceHandlerWithIdentifier:(id)arg1 ;
-(IDSNRDeviceBridge *)idsNRDeviceBridge;
-(void)_updateLocalSetupInProgressState:(char)arg1 ;
-(id)_copyPairedDevice;
-(char)isTerminusNearby;
-(char)isTerminusConnected;
-(id)initWithBroadcastQueue:(id)arg1 ;
-(void)_removeDevicePreferencesHandler;
-(void)setIdsNRDeviceBridge:(IDSNRDeviceBridge *)arg1 ;
-(void)setNrDevicePreferencesHandler:(IDSNRDevicePreferencesHandler *)arg1 ;
-(IDSNRDevicePreferencesHandler *)nrDevicePreferencesHandler;
-(id)_copyPeerWithID:(id)arg1 ;
-(void)setIsLocalSetUpInProgress:(char)arg1 ;
-(char)isLocalSetUpInProgress;
-(id)_createPeerFromDeviceInfo:(id)arg1 ;
-(unsigned)_nextMessageID;
-(void)defaultPeerConnectivityChanged:(char)arg1 ;
-(void)_disableOTRForDefaultPairedPeer:(id)arg1 ;
-(void)_refreshIPsecStatus;
-(id)_deviceIDForPeer:(id)arg1 ;
-(double)notificationDelayInSeconds;
-(double)lastCloudConnectedTime;
-(void)setLastCloudConnectedTime:(double)arg1 ;
-(void)enableConnectionForDefaultPairedDevice:(char)arg1 ;
-(void)defaultPeerNearbyChanged:(char)arg1 ;
-(void)_setCloudConnectionConnected:(char)arg1 forPeer:(id)arg2 ;
-(void)defaultPeerCloudConnectivityChanged:(char)arg1 ;
-(id)_createPeerFromDeviceID:(id)arg1 ;
-(void)peerCloudConnectivityChanged:(id)arg1 ;
-(void)defaultPeerMagnetIndicationOfAwakeStateChanged:(char)arg1 ;
-(void)defaultPeerClassCConnectivityDidChange:(char)arg1 ;
-(void)_enableOTRForDefaultPairedDevice;
-(void)_setOTREnableTimer;
-(void)_cleanupContinuityPeerMaps:(id)arg1 ;
-(id)_currentOTRTimer;
-(void)nrDeviceBridge:(id)arg1 defaultPeerNearbyDidChange:(char)arg2 ;
-(void)nrDeviceBridge:(id)arg1 defaultPeerConnectivityDidChange:(char)arg2 ;
-(void)nrDeviceBridge:(id)arg1 defaultPeerCloudConnectivityDidChange:(char)arg2 ;
-(void)nrDeviceBridge:(id)arg1 deviceMagnetIndicationOfAwakeStateDidChange:(char)arg2 ;
-(void)nrDeviceBridge:(id)arg1 linkType:(unsigned char)arg2 ;
-(void)nrDeviceBridge:(id)arg1 defaultPeerClassCConnectivityDidChange:(char)arg2 ;
-(void)peerHasSpaceForNonUrgentMessages:(id)arg1 priority:(long long)arg2 dataProtectionClass:(unsigned)arg3 ;
-(void)rapportClient:(id)arg1 didDiscoverDevice:(id)arg2 ;
-(void)rapportClient:(id)arg1 didLoseDevice:(id)arg2 ;
-(void)stopIdsNRDeviceBridgeAndPreferenceHandler;
-(id)copyPeerWithID:(id)arg1 ;
-(void)localSetupStarted;
-(void)prepareForQuickSwitch;
-(void)updatecloudDeliveryStateOnDefaultPeer;
-(void)ensureLocalSetupInProgressConsistencyAfterQWS;
-(void)setPendingCloudFlagOnDefaultPeer;
-(void)_removePeerFromDeviceID:(id)arg1 ;
-(void)sendData:(id)arg1 service:(id)arg2 protobuf:(id)arg3 resourcePath:(id)arg4 resourceMetadata:(id)arg5 priority:(long long)arg6 dataProtectionClass:(unsigned)arg7 nonWaking:(char)arg8 nonCloudWaking:(char)arg9 requireBluetooth:(char)arg10 requireLocalWiFi:(char)arg11 queueOneIdentifier:(id)arg12 expirationDate:(id)arg13 enforceRemoteTimeouts:(char)arg14 expectsPeerResponse:(char)arg15 wantsAppAck:(char)arg16 compressPayload:(char)arg17 compressed:(char)arg18 peerResponseIdentifier:(id)arg19 messageID:(id)arg20 topic:(id)arg21 awdTopic:(id)arg22 command:(id)arg23 fromID:(id)arg24 uriToDeviceID:(id)arg25 localDeviceDestinationDeviceUUID:(id)arg26 bypassDuet:(char)arg27 duetIdentifiersOverride:(id)arg28 messageType:(long long)arg29 fallbackBlock:(/*^block*/id)arg30 progressBlock:(/*^block*/id)arg31 completionBlock:(/*^block*/id)arg32 ;
-(id)topicForStreamID:(unsigned short)arg1 ;
-(void)enableCloudConnectionForDefaultPairedDevice:(char)arg1 ;
-(char)hasSpaceForMessagesWithPriority:(long long)arg1 dataProtectionClass:(unsigned)arg2 ;
-(char)hasSpaceForCloudMessagesWithPriority:(long long)arg1 dataProtectionClass:(unsigned)arg2 ;
-(void)removeUTunPeerWithDeviceUniqueID:(id)arg1 btuuid:(id)arg2 reason:(long long)arg3 shouldWait:(char)arg4 ;
-(void)addUTunPeerWithDeviceUniqueID:(id)arg1 btuuid:(id)arg2 ;
-(void)legacyUTunBTLinkManagerDefaultPeerConnectivityChanged:(char)arg1 ;
-(void)legacyUTunBTLinkManagerDefaultPeerNearbyChanged:(char)arg1 ;
-(void)legacyUTunBTLinkManagerDefaultPeerCloudConnectivityChanged:(char)arg1 ;
-(void)defaultPeerUnpairStart;
-(void)defaultPeerDropDisallowedMessages;
-(void)peerCloudConnectivityChanged:(id)arg1 isCloudConnected:(char)arg2 ;
-(char)isTerminusRegistered;
-(char)isTerminusConnectedOverBluetooth;
-(void)findDefaultPeerToForceOTRNegotiation:(id)arg1 priority:(long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)lockContinuityPeer:(id)arg1 btUUID:(id)arg2 ;
-(void)unlockAllContinuityPeers;
-(id)pendingContinuityPeerID:(id)arg1 ;
-(void)tryNextContinuityPeer:(id)arg1 ;
-(char)isPeerForPhoneContinuityLocalMessage:(id)arg1 ;
-(void)enableOTRForDefaultPairedDevice;
-(char)enableOTR;
-(void)setShouldUseIPsecLinkForDefaultPairedDevice:(char)arg1 ;
-(IDSConnectivityMonitor *)connectivityMonitor;
-(void)setConnectivityMonitor:(IDSConnectivityMonitor *)arg1 ;
-(void)setNotificationDelayInSeconds:(double)arg1 ;
@end

