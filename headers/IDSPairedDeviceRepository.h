/*
* This header is generated by classdump-dyld 1.0
* on Thursday, March 2, 2023 at 12:47:59 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/Contents/MacOS/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol IDSPairedDevicePersister;
#import <identityservicesd/identityservicesd-Structs.h>
@class NSMutableDictionary;

@interface IDSPairedDeviceRepository : NSObject {

	NSMutableDictionary* _pairedDevices;
	os_unfair_lock_s _pairedDevicesLock;
	id<IDSPairedDevicePersister> _persister;

}
-(id)description;
-(char)isEmpty;
-(void)deactivatePairedDevices;
-(id)allPairedDevices;
-(id)initWithPersister:(id)arg1 ;
-(id)activePairedDevice;
-(void)_accessPairedDevicesInCriticalSectionWithBlock:(/*^block*/id)arg1 ;
-(void)_criticalLoadPairedDeviceArray:(id)arg1 ;
-(id)pairedDeviceWithCBUUID:(id)arg1 ;
-(id)_criticalPairedDeviceWithCBUUID:(id)arg1 ;
-(id)_criticalActivePairedDevice;
-(char)_addPairedDevice:(id)arg1 ;
-(void)_criticalPutPairedDevice:(id)arg1 ;
-(char)_criticalPersistState;
-(char)_performTransactionInCriticalSectionWithBlock:(/*^block*/id)arg1 ;
-(char)_criticalRemovePairedDeviceWithCBUUID:(id)arg1 ;
-(id)_criticalAllPairedDevices;
-(long long)_criticalActivatePairedDeviceWithCBUUID:(id)arg1 ;
-(void)_criticalPerformPairedDeviceDeactivation;
-(long long)_criticalPerformPairedDeviceActivationWithCBUUID:(id)arg1 ;
-(void)_criticalUpdatePairedDevice:(id)arg1 isActive:(char)arg2 ;
-(char)_criticalPurgeSecuredEncryptionKeysForAllPairedDevices;
-(char)_criticalUpdatePairedDeviceWithCBUUID:(id)arg1 deviceInfoPayload:(id)arg2 ;
-(char)_criticalUpdatePairedDeviceWithCBUUID:(id)arg1 supportIPsec:(char)arg2 ;
-(char)_criticalUpdatePairedDeviceWithCBUUID:(id)arg1 deviceUniqueID:(id)arg2 buildVersion:(id)arg3 productVersion:(id)arg4 productName:(id)arg5 pairingProtocolVersion:(unsigned)arg6 minCompatibilityVersion:(unsigned)arg7 maxCompatibilityVersion:(unsigned)arg8 serviceMinCompatibilityVersion:(unsigned short)arg9 ;
-(char)_criticalUpdatePairedDeviceWithCBUUID:(id)arg1 pairingType:(long long)arg2 ;
-(char)_criticalUpdatePairedDeviceWithCBUUID:(id)arg1 iCloudURIs:(id)arg2 pushToken:(id)arg3 ;
-(char)_criticalPerformTransactionWithBlock:(/*^block*/id)arg1 ;
-(char)loadPairedDevicesFromStorage;
-(char)containsPairedDeviceWithCBUUID:(id)arg1 ;
-(char)addPairedDeviceWithCBUUID:(id)arg1 pairingType:(long long)arg2 ;
-(char)removePairedDeviceWithCBUUID:(id)arg1 ;
-(id)allPairedDevicesWithType:(long long)arg1 ;
-(id)pairedDevicesWithIsPairingValue:(char)arg1 ;
-(long long)activatePairedDeviceWithCBUUID:(id)arg1 ;
-(char)purgeSecuredEncryptionKeysForAllPairedDevices;
-(char)updatePairedDeviceWithCBUUID:(id)arg1 deviceInfoPayload:(id)arg2 ;
-(char)updatePairedDeviceWithCBUUID:(id)arg1 supportIPsec:(char)arg2 ;
-(char)updatePairedDeviceWithCBUUID:(id)arg1 deviceUniqueID:(id)arg2 buildVersion:(id)arg3 productVersion:(id)arg4 productName:(id)arg5 pairingProtocolVersion:(unsigned)arg6 minCompatibilityVersion:(unsigned)arg7 maxCompatibilityVersion:(unsigned)arg8 serviceMinCompatibilityVersion:(unsigned short)arg9 ;
-(char)updatePairedDeviceWithCBUUID:(id)arg1 pairingType:(long long)arg2 ;
-(char)updatePairedDeviceWithCBUUID:(id)arg1 iCloudURIs:(id)arg2 pushToken:(id)arg3 ;
-(char)shouldUseIPsecLinkForDefaultPairedDevice;
@end

