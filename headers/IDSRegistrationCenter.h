/*
* This header is generated by classdump-dyld 1.0
* on Thursday, March 2, 2023 at 12:48:11 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/Contents/MacOS/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <libobjc.A.dylib/IDSEngramKeyStoreListener.h>

@protocol IDSRegistrationCenterMessageDelivery;
@class NSMutableArray, NSMutableDictionary, NSDate, NSNumber, IDSValidationSession, IDSPushHandler, IDSGetDependentRegistrationsCenter, IDSKeyTransparencyVerifier, CUTDeferredTaskQueue, NSString;

@interface IDSRegistrationCenter : NSObject <IDSEngramKeyStoreListener> {

	NSMutableArray* _queuedRegistrations;
	NSMutableArray* _queuedAuthentications;
	NSMutableArray* _currentAuthentications;
	NSMutableArray* _currentRegistrations;
	NSMutableArray* _handlers;
	char _pendingDequeue;
	char _pendingDeregistration;
	NSMutableDictionary* _currentGetHandlesBlocks;
	NSMutableDictionary* _currentGetHandlesRegistrations;
	NSMutableArray* _successfulRegistrations;
	char _shouldUseAbsinthe;
	char _isBuildingContext;
	NACContextOpaque_Ref _validationContext;
	char _validationContextDisabled;
	NSDate* _validateContextDate;
	NSNumber* _validateContextTTL;
	IDSValidationSession* _validationSession;
	NSMutableArray* _validationContextQueue;
	NSDate* _dateSentLastHTTPMessage;
	NSDate* _dateLastRegistered;
	NSDate* _accountingHour;
	unsigned long long _registrations;
	id<IDSRegistrationCenterMessageDelivery> _httpMessageDelivery;
	IDSPushHandler* _pushHandler;
	IDSGetDependentRegistrationsCenter* _gdrCenter;
	IDSKeyTransparencyVerifier* _keyTransparencyVerifier;
	CUTDeferredTaskQueue* _sendAuthenticateRegistrationTask;
	CUTDeferredTaskQueue* _sendRegistrationTask;
	CUTDeferredTaskQueue* _sendDeregistrationTask;
	CUTDeferredTaskQueue* _cleanupAbsintheTask;

}

@property (nonatomic,readonly) CUTDeferredTaskQueue * sendAuthenticateRegistrationTask;              //@synthesize sendAuthenticateRegistrationTask=_sendAuthenticateRegistrationTask - In the implementation block
@property (nonatomic,readonly) CUTDeferredTaskQueue * sendRegistrationTask;                          //@synthesize sendRegistrationTask=_sendRegistrationTask - In the implementation block
@property (nonatomic,readonly) CUTDeferredTaskQueue * sendDeregistrationTask;                        //@synthesize sendDeregistrationTask=_sendDeregistrationTask - In the implementation block
@property (nonatomic,readonly) CUTDeferredTaskQueue * cleanupAbsintheTask;                           //@synthesize cleanupAbsintheTask=_cleanupAbsintheTask - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)handler:(id)arg1 pushTokenChanged:(id)arg2 ;
-(void)__sendMessage:(id)arg1 ;
-(id)activeRegistrations;
-(void)logState;
-(char)sendRegistration:(id)arg1 ;
-(char)isRegistering:(id)arg1 ;
-(void)engramKeyStoreDidUpdateIdentities:(id)arg1 ;
-(char)sendDeregistration:(id)arg1 ;
-(void)cancelActionsForRegistrationInfo:(id)arg1 ;
-(void)reportSpamWithMessages:(id)arg1 selfURI:(id)arg2 registration:(id)arg3 ;
-(void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 isBlackholed:(char)arg3 messageServerTimestamp:(id)arg4 selfURI:(id)arg5 registration:(id)arg6 ;
-(char)queryValidatedEmailsForRegistration:(id)arg1 allowPasswordPrompt:(char)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)_notifyRegistrationSuccess:(id)arg1 ;
-(void)buildValidationCredentialsIfNeeded;
-(char)authenticateRegistration:(id)arg1 ;
-(void)reportiMessageSpamCheckUnknown:(id)arg1 count:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)sendHardDeregisterCompletionBlock:(/*^block*/id)arg1 ;
-(id)dateLastRegistered;
-(id)gdrCenter;
-(void)sendValidateCredential:(id)arg1 withDeliveryCompletionBlock:(/*^block*/id)arg2 ;
-(void)_dequeuePendingRequestsIfNecessary;
-(void)__reallySendAuthenticateRegistration;
-(void)__reallySendRegistration;
-(void)__reallySendDeregistration;
-(char)_hasCurrentAuthenticationsOrRegistrations;
-(void)__cleanupValidationInfo;
-(void)__dumpState;
-(id)initWithMessageDelivery:(id)arg1 pushHandler:(id)arg2 keyTransparencyVerifier:(id)arg3 ;
-(char)_checkOverRegistrations;
-(void)_sendAuthenticateRegistration:(id)arg1 ;
-(void)_sendRegistrationAsDeregister:(char)arg1 ;
-(void)__failValidationQueueWithErrorResponseCode:(long long)arg1 ;
-(void)_queueBuildingValidationDataIfNecessaryForMessage:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_sendAbsintheValidationCertRequestIfNeeded;
-(void)__flushValidationQueue;
-(void)__failValidationQueue;
-(void)__queueValidationMessage:(id)arg1 ;
-(void)_noteRegistration;
-(id)_keyTransparencyLoggableDataFromRegistrationMessage:(id)arg1 service:(id)arg2 URI:(id)arg3 ;
-(id)keyTransparencyVerifier;
-(void)_notifyRegistrationFailure:(id)arg1 responseCode:(long long)arg2 registrationError:(long long)arg3 error:(id)arg4 info:(id)arg5 ;
-(void)_notifyAllSuccessfulRegistrations:(id)arg1 ;
-(id)_URIsToRegisterForRegistration:(id)arg1 ;
-(char)_hasOngoingAuthentications;
-(id)_trustedDeviceForRegistrations:(id)arg1 transparencyLoggableDatasByServiceType:(id)arg2 ;
-(void)_processRegistrationMessage:(id)arg1 sentRegistrations:(id)arg2 descriptionString:(id)arg3 actionID:(id)arg4 actionString:(id)arg5 isDeregister:(char)arg6 deliveredWithError:(id)arg7 resultCode:(long long)arg8 resultDictionary:(id)arg9 ;
-(void)_notifyIDSAuthenticationSuccess:(id)arg1 ;
-(void)_notifyProvisionFailure:(id)arg1 responseCode:(long long)arg2 registrationError:(long long)arg3 error:(id)arg4 fatal:(char)arg5 info:(id)arg6 ;
-(/*^block*/id)_authMessageCompletionWithRegistration:(id)arg1 withOverallSuccessBlock:(/*^block*/id)arg2 overallFailure:(/*^block*/id)arg3 ;
-(id)_authMessageForRegistration:(id)arg1 ;
-(void)cancelRegisterActionsForRegistrationInfo:(id)arg1 ;
-(id)_geoRegion;
-(char)_hasRegistration:(id)arg1 inQueue:(id)arg2 ;
-(void)_notifyEmailQueryFailure:(id)arg1 responseCode:(long long)arg2 registrationError:(long long)arg3 error:(id)arg4 info:(id)arg5 ;
-(void)_notifyEmailQuerySuccess:(id)arg1 emailInfo:(id)arg2 ;
-(void)_processGetHandlesMessage:(id)arg1 registrations:(id)arg2 deliveredWithError:(id)arg3 resultCode:(long long)arg4 resultDictionary:(id)arg5 allowPasswordPrompt:(char)arg6 ;
-(char)_queryValidatedEmailsForRegistration:(id)arg1 allowPasswordPrompt:(char)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)_sendDeregistration:(id)arg1 ;
-(void)_notifyRegistrationIdentitiesUpdated;
-(CUTDeferredTaskQueue *)sendAuthenticateRegistrationTask;
-(CUTDeferredTaskQueue *)sendRegistrationTask;
-(CUTDeferredTaskQueue *)sendDeregistrationTask;
-(CUTDeferredTaskQueue *)cleanupAbsintheTask;
@end

