/*
* This header is generated by classdump-dyld 1.0
* on Thursday, March 2, 2023 at 12:48:14 PM Israel Standard Time
* Operating System: Version 11.2.3 (Build 20D91)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/Contents/MacOS/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol IMUserDefaults, IDSIDStatusDependencyProvider;
@class IMTimer, NSRecursiveLock, NSMutableDictionary, NSDate, IDSPeerIDManager;

@interface IDSIDStatusQueryController : NSObject {

	IMTimer* _purgeTimer;
	NSRecursiveLock* _lock;
	NSMutableDictionary* _idStatusCache;
	NSMutableDictionary* _completionBlocks;
	NSDate* _startQueryDate;
	/*^block*/id _purgeCancelBlock;
	/*^block*/id _purgeEnqueueBlock;
	char _loaded;
	int _numQueriesThisHour;
	char _allowProxyQueries;
	IDSPeerIDManager* _peerIDManager;
	id<IMUserDefaults> _userDefaults;
	id<IDSIDStatusDependencyProvider> _dependencyProvider;

}

@property (nonatomic,retain) IDSPeerIDManager * peerIDManager;                                  //@synthesize peerIDManager=_peerIDManager - In the implementation block
@property (nonatomic,retain) id<IMUserDefaults> userDefaults;                                   //@synthesize userDefaults=_userDefaults - In the implementation block
@property (nonatomic,retain) id<IDSIDStatusDependencyProvider> dependencyProvider;              //@synthesize dependencyProvider=_dependencyProvider - In the implementation block
@property (assign,nonatomic) char allowProxyQueries;                                            //@synthesize allowProxyQueries=_allowProxyQueries - In the implementation block
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(id<IMUserDefaults>)userDefaults;
-(void)_flush;
-(void)_setPurgeTimer;
-(void)clearCache;
-(void)setUserDefaults:(id<IMUserDefaults>)arg1 ;
-(void)_loadCache;
-(void)_saveCache;
-(void)_loadIfNeeded;
-(IDSPeerIDManager *)peerIDManager;
-(unsigned)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 respectExpiry:(char)arg4 ;
-(void)setPeerIDManager:(IDSPeerIDManager *)arg1 ;
-(void)addCompletionBlock:(/*^block*/id)arg1 forUniqueIdentifier:(id)arg2 ;
-(void)removeCompletionBlockForUniqueIdentifier:(id)arg1 ;
-(void)removeCachedEntriesForService:(id)arg1 ;
-(void)_updateCacheWithStatusUpdates:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 success:(char)arg4 hadError:(char)arg5 negativeCacheHints:(id)arg6 ;
-(void)_sendIDStatusChanges:(id)arg1 forService:(id)arg2 URI:(id)arg3 success:(char)arg4 error:(id)arg5 ;
-(id)initWithShouldAllowProxyQueries:(char)arg1 peerIDManager:(id)arg2 userDefaults:(id)arg3 statusDepencencyProvider:(id)arg4 ;
-(unsigned)_IDStatusForURI:(id)arg1 fromService:(id)arg2 ;
-(unsigned)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 ;
-(id)_lookupDateForURI:(id)arg1 fromService:(id)arg2 ;
-(id)_validExpiryForURI:(id)arg1 fromService:(id)arg2 ;
-(id)_negativeTTLForURI:(id)arg1 fromService:(id)arg2 ;
-(id)_cachedResultsForURIs:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 ;
-(void)_lookupIDStatusForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(char)arg5 allowQuery:(char)arg6 forceQuery:(char)arg7 completionBlock:(/*^block*/id)arg8 ;
-(void)requestIDStatusForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(char)arg5 allowQuery:(char)arg6 forceQuery:(char)arg7 completionBlock:(/*^block*/id)arg8 ;
-(void)_pruneExpiredStatusUnknownEntries;
-(void)noteIncomingID:(id)arg1 fromService:(id)arg2 ;
-(char)hasValidStatusForURI:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 ;
-(void)requestIDStatusForID:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(char)arg5 allowQuery:(char)arg6 completionBlock:(/*^block*/id)arg7 ;
-(void)setCachedIDStatus:(unsigned)arg1 ForID:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 ;
-(id)currentCache;
-(id)currentCacheForService:(id)arg1 ;
-(void)remoteDevicesForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(char)arg5 allowQuery:(char)arg6 completionBlock:(/*^block*/id)arg7 ;
-(id<IDSIDStatusDependencyProvider>)dependencyProvider;
-(void)setDependencyProvider:(id<IDSIDStatusDependencyProvider>)arg1 ;
-(char)allowProxyQueries;
-(void)setAllowProxyQueries:(char)arg1 ;
@end

